import 'dart:convert';
import 'package:flutter/material.dart';
import 'package:google_fonts/google_fonts.dart';
import 'package:http/http.dart' as http;
import 'package:shared_preferences/shared_preferences.dart';

import '../main.dart';
import 'applyleave_screen.dart';
import 'detailleave_screen.dart';

class LeaveScreen extends StatefulWidget {
  @override
  State<LeaveScreen> createState() => _LeaveScreenState();
}

class _LeaveScreenState extends State<LeaveScreen> {
  List<dynamic> leaveData = [];
  bool isLoading = true;

  @override
  void initState() {
    super.initState();
    _fetchLeaveData(); // Panggil API untuk mendapatkan data leave saat initState
  }

  Future<void> _fetchLeaveData() async {
    setState(() {
      isLoading = true;
    });

    SharedPreferences prefs = await SharedPreferences.getInstance();
    String? accessToken = prefs.getString('access_token');

    try {
      var response = await http.get(
        Uri.parse('http://127.0.0.1:8000/api/leave'), // URL API leave
        headers: {
          'Authorization': 'Bearer $accessToken',
        },
      );

      if (response.statusCode == 200) {
        var data = jsonDecode(response.body);
        setState(() {
          leaveData = data['leaves']; // Data leave diambil dari response
          isLoading = false;
        });
      } else {
        // Handle error
        print('Failed to fetch leave data');
      }
    } catch (error) {
      print('Error during fetching leave data: $error');
    }

    setState(() {
      isLoading = false;
    });
  }

  Color _getStatusColor(String status) {
    switch (status.toLowerCase()) {
      case 'approved':
        return Colors.green;
      case 'pending':
        return Colors.orange;
      case 'rejected':
        return Colors.red;
      default:
        return Colors.grey;
    }
  }

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      backgroundColor: const Color.fromRGBO(255, 255, 255, 0.95),
      body: SafeArea(
        child: Column(
          children: [
            // AppBar section with back button and leaveType
            Padding(
              padding: const EdgeInsets.only(top: 30, left: 16, right: 30),
              child: Row(
                mainAxisAlignment: MainAxisAlignment.spaceBetween,
                children: [
                  InkWell(
                    onTap: () {
                      Navigator.pushReplacement(
                        context,
                        MaterialPageRoute(
                            builder: (context) => MainScreen(
                                selectedIndex: 0)), // Default index
                      );
                    },
                    child: const Row(
                      children: [
                        Icon(
                          Icons.arrow_back_ios,
                          color: Colors.black,
                        ),
                      ],
                    ),
                  ),
                  Text(
                    'Leave',
                    style: GoogleFonts.dmSans(
                      color: Colors.black,
                      fontSize: 18,
                      fontWeight: FontWeight.bold,
                    ),
                  ),
                  const SizedBox(width: 48), // Empty space for alignment
                ],
              ),
            ),
            const SizedBox(width: 18),

            // Leave cards section
            Expanded(
              child: Padding(
                padding: const EdgeInsets.symmetric(horizontal: 16.0),
                child: isLoading
                    ? Center(child: CircularProgressIndicator())
                    : ListView.builder(
                        itemCount: leaveData.length,
                        itemBuilder: (context, index) {
                          var leave = leaveData[index];
                          return LeaveCard(
                            date: leave['date'],
                            leaveType: leave['leaveType'],
                            reason: leave['reason'],
                            startDate: leave['startDate'],
                            endDate: leave['endDate'],
                            attachmentCount: leave['attachmentCount'],
                            status: leave['status'],
                            statusColor: _getStatusColor(leave['status']),
                          );
                        },
                      ),
              ),
            ),
          ],
        ),
      ),
      floatingActionButton: FloatingActionButton(
        onPressed: () {
          // Navigate to ApplyLeaveScreen when the button is pressed
          Navigator.push(
            context,
            MaterialPageRoute(
              builder: (context) => const ApplyLeaveScreen(),
            ),
          );
        },
        backgroundColor: const Color(0xFF2A5867),
        child: const Icon(
          Icons.add,
          color: Colors.white,
        ),
        shape: const CircleBorder(),
      ),
    );
  }
}

class LeaveCard extends StatelessWidget {
  final String date;
  final String leaveType;
  final String reason;
  final String startDate;
  final String endDate;
  final int attachmentCount;
  final String status;
  final Color statusColor;

  const LeaveCard({
    required this.date,
    required this.leaveType,
    required this.reason,
    required this.startDate,
    required this.endDate,
    required this.attachmentCount,
    required this.status,
    required this.statusColor,
  });

  @override
  Widget build(BuildContext context) {
    return Container(
      margin: const EdgeInsets.only(top: 25),
      decoration: BoxDecoration(
        borderRadius: BorderRadius.circular(10.0),
        boxShadow: const [
          BoxShadow(
            color: Color(0xFFEDF2F3),
            spreadRadius: 2,
            blurRadius: 7,
            offset: Offset(0, 3),
          ),
        ],
      ),
      child: Column(
        children: [
          // Date header with the same width as the card content
          Container(
            width: double.infinity,
            height: 40,
            decoration: const BoxDecoration(
              color: Color(0xFF2A5867),
              borderRadius: BorderRadius.only(
                topLeft: Radius.circular(10),
                topRight: Radius.circular(10),
              ),
            ),
            child: Center(
              child: Text(
                date,
                style: GoogleFonts.dmSans(
                  color: const Color(0xFFEDF2F3),
                  fontWeight: FontWeight.bold,
                ),
              ),
            ),
          ),
          // Card content
          Card(
            color: Colors.white,
            margin: EdgeInsets.zero,
            shape: RoundedRectangleBorder(
              borderRadius: BorderRadius.circular(10.0),
            ),
            child: InkWell(
              onTap: () {
                // Navigate to detail page for leave
                Navigator.push(
                  context,
                  MaterialPageRoute(
                    builder: (context) => DetailLeaveScreen(
                      date: date,
                      leaveType: leaveType,
                      reason: reason,
                      startDate: startDate,
                      endDate: endDate,
                      attachmentCount: attachmentCount,
                      status: status,
                      statusColor: statusColor,
                    ),
                  ),
                );
              },
              child: Padding(
                padding: const EdgeInsets.all(16.0),
                child: Column(
                  crossAxisAlignment: CrossAxisAlignment.start,
                  children: [
                    // Main content with leaveType, reason, and leave date
                    Row(
                      mainAxisAlignment: MainAxisAlignment.spaceBetween,
                      children: [
                        Expanded(
                          child: Column(
                            crossAxisAlignment: CrossAxisAlignment.start,
                            children: [
                              Text(
                                leaveType,
                                style: const TextStyle(
                                  fontWeight: FontWeight.bold,
                                  fontSize: 16,
                                ),
                              ),
                              Text(reason),
                              const SizedBox(height: 8),
                              Row(
                                children: [
                                  const Icon(Icons.calendar_today, size: 16),
                                  const SizedBox(width: 4),
                                  Text(startDate),
                                  const SizedBox(width: 10),
                                  const Text('-'),
                                  const SizedBox(width: 10),
                                  Text(endDate),
                                ],
                              ),
                              if (attachmentCount > 0)
                                Row(
                                  children: [
                                    const Icon(Icons.attach_file, size: 16),
                                    const SizedBox(width: 4),
                                    Text('$attachmentCount Attachment(s)'),
                                  ],
                                ),
                            ],
                          ),
                        ),
                        const Icon(
                          Icons.arrow_forward_ios,
                          size: 16,
                          color: Colors.grey,
                        ),
                      ],
                    ),
                    const SizedBox(height: 8),
                    // Status section at the bottom right
                    Row(
                      mainAxisAlignment: MainAxisAlignment.end,
                      children: [
                        Container(
                          padding: const EdgeInsets.symmetric(
                              horizontal: 12, vertical: 4),
                          decoration: BoxDecoration(
                            color: statusColor.withOpacity(0.2),
                            borderRadius: BorderRadius.circular(16),
                          ),
                          child: Text(
                            status,
                            style: TextStyle(
                              color: statusColor,
                              fontWeight: FontWeight.bold,
                            ),
                          ),
                        ),
                      ],
                    ),
                    const SizedBox(height: 6),
                  ],
                ),
              ),
            ),
          ),
        ],
      ),
    );
  }
}
